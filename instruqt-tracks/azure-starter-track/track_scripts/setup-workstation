#!/bin/bash
set -euxo pipefail
echo "Running track setup script on host workstation"

# Wait for the Instruqt host bootstrap to finish
until [ -f /opt/instruqt/bootstrap/host-bootstrap-completed ]
do
    sleep 1
done

# Install Linux packages
apt -y update
apt -y install unzip

# Install Azure CLI
curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

# Install Code server
curl -fsSL https://code-server.dev/install.sh | sh

# Create Code Server startup script
cat <<-EOF > /etc/systemd/system/code-server.service
[Unit]
Description=Code Server
After=network.target
StartLimitIntervalSec=0

[Service]
Type=simple
Restart=always
RestartSec=1
User=root
ExecStart=/usr/bin/code-server --host 0.0.0.0 --port 8443 --cert --auth none /root

[Install]
WantedBy=multi-user.target
EOF

# Start Code Server
systemctl enable code-server
systemctl start code-server

# Install an IDE extension
# code-server --install-extension ms-python.python --user-data-dir /user-dat

# Log onto az cli
#az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID

# Create a resource group
#az group create --name instruqtResourceGroup --location eastus

# Set Terraform Version
TERRAFORM_VERSION="1.2.5"

# Install desired version of Terraform
wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
mv terraform /usr/local/bin/terraform
chmod +x /usr/local/bin/terraform
rm -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip

# You can clone a git repo with terraform and run it.  Example:
# git clone https://github.com/hashicorp/hashicat-azure
# cd hashicat-azure
# terraform init
# terraform apply