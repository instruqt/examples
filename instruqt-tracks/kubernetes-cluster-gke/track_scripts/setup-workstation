#!/bin/bash

set -euxo pipefail

# Wait for Instruqt bootstrap to be complete
while [ ! -f /opt/instruqt/bootstrap/host-bootstrap-completed ]
do
  echo "Waiting for Instruqt to finish booting the VM"
  sleep 1
done

# Choose your zone and cluster name
ZONE="us-central1-a"
CLUSTERNAME="instruqt-cluster"

# First we update the apt package manager cache
apt -y update

# Then we install some packages in noninteractive mode
DEBIAN_FRONTEND=noninteractive apt -y install curl wget htop jq vim git apt-transport-https ca-certificates gnupg python3

# Install gcloud CLI
curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-419.0.0-linux-x86_64.tar.gz
tar -zxf google-cloud-cli-419.0.0-linux-x86_64.tar.gz
./google-cloud-sdk/install.sh --rc-path /root/.bashrc --command-completion true --path-update true --quiet
echo "export USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> /root/.bashrc
source /root/.bashrc

# Install GKE gcloud auth plugin 
gcloud components install gke-gcloud-auth-plugin -q

# Install kubectl
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
install -m 0755 kubectl /usr/local/bin/kubectl

# Install helm
curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
chmod 700 get_helm.sh
./get_helm.sh

# Fetch our Google Service Account credentials
mkdir -p /root/.config/gcloud
echo $INSTRUQT_GCP_PROJECT_GCPPROJECT_SERVICE_ACCOUNT_KEY | base64 -d > /root/.config/gcloud/credentials

# Activate the service account
gcloud auth activate-service-account --key-file /root/.config/gcloud/credentials

# Set our project
gcloud config set project $INSTRUQT_GCP_PROJECT_GCPPROJECT_PROJECT_ID

# Create the GKE cluster
gcloud container clusters create $CLUSTERNAME --num-nodes=3 --zone $ZONE

# Get credentials for our cluster
gcloud container clusters get-credentials $CLUSTERNAME --zone $ZONE

# Wait for cluster
while $(kubectl get nodes | grep 'metrics.k8s.io/v1beta1'); do sleep 3; done
